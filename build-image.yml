# Load the common variables repo
resources:
  repositories:
  - repository: az-packer-common
    type: github
    endpoint: Azure
    name: kevinpz/az-packer-common

# Source the variables
variables:
# Load the common variables
- template: common-variables.yml@az-packer-common
# Define the list of replication region
- name: replication_regions_list
  ${{ if eq(variables['replication_regions'], '') }}:
      value: variables.location
  ${{ else }}:
      value: '${{ variables.location }},${{ variables.replication_regions }}'

parameters:
# The source image publisher to use
- name: src_image_publisher
  type: string 
# The source image offer to use
- name: src_image_offer
  type: string 
# The source image sku to use
- name: src_image_sku
  type: string 
# The source image sku to use
- name: image_name
  type: string 
# The type of image to build
- name: image_type
  type: string 
  values :
  - Linux
  - Windows
# VM SKU for building the image
- name: image_build_sku
  type: string 
  default: 'Standard_D2ds_v4'

stages:
# Create the image definition in the compute image gallery
- stage: Deploy
  # Use the Microsoft hosted runners
  pool: vm-azure
      # Uncomment to use Microsoft managed runners
      # vmImage: 'ubuntu-latest'
  jobs:
  - job: Deploy
    steps:
      - checkout: az-packer-pipeline-template
      # Download Terraform binary
      - task: TerraformInstaller@0
        displayName: install terraform
        inputs:
          terraformVersion: latest
      # Init Terraform backend and download providers
      - task: TerraformCLI@0
        displayName: 'terraform init'
        inputs:
          workingDirectory: terraform
          command: init
          # Configure the backend to store the .tfstate file
          backendType: azurerm
          backendServiceArm: '${{ variables.sc_name }}'
          backendAzureRmSubscriptionId: '${{ variables.backend_subscription_id }}'
          backendAzureRmResourceGroupName: '${{ variables.stg_rg_name }}'
          backendAzureRmStorageAccountName: '${{ variables.stg_name }}'
          backendAzureRmContainerName: '${{ variables.stg_container_name }}'
          backendAzureRmKey: '$(System.TeamProject)/$(Build.Repository.Name).tfstate'
      # Deploy Terraform ressources
      - task: TerraformCLI@0
        displayName: 'terraform apply'
        inputs:
          workingDirectory: terraform
          command: apply
          environmentServiceName: '${{ variables.sc_name }}'
          providerAzureRmSubscriptionId: '${{ variables.depl_subscription_id }}'
          commandOptions: '-var "location=${{ variables.location }}" -var "rg_name=${{ variables.rg_name }}" -var "gallery_name=${{ variables.gallery_name }}" -var "image_name=${{ parameters.image_name }}" -var "image_type=${{ parameters.image_type }}" -var "src_image_publisher=${{ parameters.src_image_publisher }}" -var "src_image_offer=${{ parameters.src_image_offer }}" -var "src_image_sku=${{ parameters.src_image_sku }}"'

# Build the image
- stage: Build
  # Use the Microsoft hosted runners
  pool: vm-azure
      # Uncomment to use Microsoft managed runners
      # vmImage: 'ubuntu-latest'
  jobs:
  - job: Build
    steps:
      # Checkout the repositories
      - checkout: self
        path: s/az-packer-image
      - checkout: az-packer-pipeline-template
      - task: AzureCLI@2
        displayName: Get Secrets
        name: get_secrets 
        inputs:
          azureSubscription: '${{ variables.sc_name }}'
          addSpnToEnvironment: true
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            echo "##vso[task.setvariable variable=client_id;isOutput=true;issecret=true]$servicePrincipalId" 
            echo "##vso[task.setvariable variable=client_secret;isOutput=true;issecret=true]$servicePrincipalKey"
            echo "##vso[task.setvariable variable=tenant_id;isOutput=true;issecret=true]$tenantId"
            az account show
      # Build the VM image
      - task: PackerBuild@1
        displayName: Build image
        inputs:
          connectedServiceName: '${{ variables.sc_name }}'
          templateType: custom
          customTemplateLocation: ./az-packer-pipeline-template/template/image_template.json
          isManagedImage: false
        env:
          client_id: $(get_secrets.client_id)
          client_secret: $(get_secrets.client_secret)
          tenant_id: $(get_secrets.tenant_id)
          subscription_id: ${{ variables.depl_subscription_id }}
          rg_name: ${{ variables.rg_name }}
          gallery_name: ${{ variables.gallery_name }}
          image_name: ${{ parameters.image_name }}
          location: ${{ variables.location }}
          replication_regions: ${{ variables.replication_regions_list }}
          src_image_publisher: ${{ parameters.src_image_publisher }}
          src_image_offer: ${{ parameters.src_image_offer }}
          src_image_sku: ${{ parameters.src_image_sku }}
          image_build_sku: ${{ parameters.image_build_sku }}
          image_type: ${{ parameters.image_type }}
          img_stg_type: ${{ variables.img_stg_type }}
          image_version: $(Build.SourceBranch)
          rg_vnet_name: ${{ variables.rg_vnet_name }}
          vnet_name: ${{ variables.vnet_name }}
          subnet_name: ${{ variables.subnet_name }}
          replica_count: ${{ variables.replica_count }}
          